class User < ActiveRecord::Base
  include RatingAverage
  validates :username, uniqueness: true, length: { minimum: 3, maximum: 15 }
  validates :password, format: { with: /.*(?=.{4,})(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).*/, message: "Password must be at least 4 characters long, and must have one upper case letter, a lower case letter, and a number" }
  
  
  
  has_many :ratings, :dependent => :destroy   # k채ytt채j채ll채 on monta ratingia
  has_many :beers, through: :ratings
  has_many :memberships, :dependent => :destroy
  has_many :beerclubs, through: :memberships
  has_secure_password

  def favorite_beer
    return nil if ratings.empty?
    ratings.order(score: :desc).limit(1).first.beer
  end

  def favorite_style
    return nil if ratings.empty?
    group_by_style = ratings.group_by { |r| r.beer.style }
    (average_ratings group_by_style).max_by { |style, average| average }[0]
  end

  def favorite_brewery
    return nil if ratings.empty?
    group_by_brewery = ratings.group_by { |r| r.beer.brewery }
    (average_ratings group_by_brewery).max_by { |brewery, average| average }[0]
  end


end
